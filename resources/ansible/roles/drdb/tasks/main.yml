---


- name: install drdb84
  yum:
#    name: http://elrepo.org/linux/elrepo/el7/x86_64/RPMS/drbd84-utils-8.9.6-1.el7.elrepo.x86_64.rpm
#    name: http://elrepo.org/linux/elrepo/el7/x86_64/RPMS/drbd84-utils-8.9.2-1.el7.elrepo.x86_64.rpm
    name: http://elrepo.org/linux/elrepo/el7/x86_64/RPMS/drbd84-utils-8.9.5-1.el7.elrepo.x86_64.rpm
    state: present

- name: install kmod-drdb84
  yum:
#    name: http://elrepo.org/linux/elrepo/el7/x86_64/RPMS/kmod-drbd84-8.4.8-1_1.el7.elrepo.x86_64.rpm #(doens't work so well )
#    name: http://elrepo.org/linux/elrepo/el7/x86_64/RPMS/kmod-drbd84-8.4.8-1_2.el7.elrepo.x86_64.rpm #( require new kernel ) 
    name: http://elrepo.org/linux/elrepo/el7/x86_64/RPMS/kmod-drbd84-8.4.7-1_1.el7.elrepo.x86_64.rpm
    state: present
    
#curl -o /usr/lib/ocf/resource.d/linbit/drbd 'http://git.linbit.com/gitweb.cgi?p=drbd-utils.git;a=blob_plain;f=scripts/ drbd.ocf;h=cf6b96634 1377a993d1bf5f585a5b9fe72eaa5f2;hb=c11ba026bbbbc647b8112543df142f2185cb4b4b'
- name: Patch drbd84-utils
  get_url:
    url: http://git.linbit.com/gitweb.cgi?p=drbd-utils.git;a=blob_plain;f=scripts/ drbd.ocf;h=cf6b96634 1377a993d1bf5f585a5b9fe72eaa5f2;hb=c11ba026bbbbc647b8112543df142f2185cb4b4b
    dest: /usr/lib/ocf/resource.d/linbit/drbd
    mode: 0755 # -rwxr-xr-x.

#--- From here is not quite good ----    
- name: Allocate a Disk Volume for DRDB
  shell: vgdisplay | grep "VG Name" | awk -v N=3 '{print $N}'
  register: vg_name
  
- shell: lvcreate --name {{ drdb_storage_name }} --size {{ drdb_storage_size }} {{ vg_name.stdout }}
  ignore_errors: yes # already exists in volume group

- template: src=wwwdata.res.j2 dest=/etc/drbd.d/wwwdata.res owner=vagrant group=vagrant mode=0644

- shell: drbdadm create-md {{ drdb_resource_name }}
  ignore_errors: yes #  Device or resource busy

- shell: modprobe drbd

- shell: drbdadm up {{ drdb_resource_name }}
  ignore_errors: yes # "Device '1' is configured!

- shell: drbdadm primary --force {{ drdb_resource_name }}
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  
- name: Waiting for synch data
  pause: seconds=30
  
- shell: mkfs.xfs {{ drdb_device }}
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  ignore_errors: yes # contain an existing filesystem (xfs)
  
- shell: mount {{ drdb_device }} /mnt 
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  
- template: src=index.html.j2 dest=/mnt/index.html owner=vagrant group=vagrant mode=0644
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  
- shell: chcon -R --reference=/var/www/html /mnt
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'

# the cluster will handle mounting and unmounting
- shell: umount {{ drdb_device }}
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'

#### Configure the Cluster for the DRBD device

- name: Configure the Cluster for the DRBD device
  shell: pcs cluster cib drbd_cfg
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  
- shell: pcs -f drbd_cfg resource create {{ pcs_drdb_resource_name }} ocf:linbit:drbd \
         drbd_resource={{ drdb_resource_name }} op monitor interval=60s 
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  ignore_errors: yes # 'WebData' already exists on this system
  
  
- shell: pcs -f drbd_cfg resource master WebDataClone {{ pcs_drdb_resource_name }} \
        master-max=1 master-node-max=1 clone-max=2 clone-node-max=1 \
        notify=true
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  ignore_errors: yes # Error: WebDataClone already exists in the cib
  
- shell: pcs cluster cib-push drbd_cfg
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'

- name: Waiting for pcs cluster cib-push drbd_cfg
  pause: seconds=10
         
- name: Files are copied
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items: "{{ files }}"         
 
#### Configure the Cluster for the Filesystem

- shell: pcs cluster cib fs_cfg
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  
- shell: pcs -f fs_cfg resource create WebFS ocf:heartbeat:Filesystem \
          device="{{ drdb_device }}" directory="/var/www/html" fstype="xfs"
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"' 
  ignore_errors: yes # 'WebFS' already exists on this system
  
- shell: pcs -f fs_cfg constraint colocation add WebFS with WebDataClone INFINITY with-rsc-role=Master
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"' 
  ignore_errors: yes # duplicate constraint already exists

- shell: pcs -f fs_cfg constraint order promote WebDataClone then start WebFS
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"' 
  ignore_errors: yes #  duplicate constraint already exists
  
- shell: pcs -f fs_cfg constraint colocation add WebSite with WebFS INFINITY
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"' 
  ignore_errors: yes # duplicate constraint already exists
  
- shell: pcs -f fs_cfg constraint order WebFS then WebSite
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  ignore_errors: yes # duplicate constraint already exists
  
# Upload configuration.
- shell: pcs cluster cib-push fs_cfg
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  
- name: Waiting for pcs cluster cib-push fs_cfg
  pause: seconds=10
    