---
- pip: name=pexpect version=4.2.1
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'

- name: Ensure directory create.
  file: path=/root/.ssh state=directory mode=0755
  
- name: No Key checking
  copy: src=config dest=/root/.ssh/config owner=root group=root mode=1700
  
#-------- Prerequisite. Cluster nodes should access to each other without password.-----+

- name: Configs cluster for passwordless to each other.
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  stat: path=/root/.ssh/id_dsa
  register: st

- shell: ssh-keygen -t dsa -f /root/.ssh/id_dsa -N ""
  when: '("{{ ansible_hostname }}" == "{{ server_active }}") and (st.stat.exists == False)'


- name: copy_public_key_to_authorized
  when: '("{{ ansible_hostname }}" == "{{ server_active }}") and (st.stat.exists == False)'
  shell: cp /root/.ssh/id_dsa.pub /root/.ssh/authorized_keys
  
- name: replicate_keys_to_passive
  when: '("{{ ansible_hostname }}" == "{{ server_active }}") and (st.stat.exists == False)'
  expect:
    command: "scp -r /root/.ssh {{ server_passive }}:"
    responses: 
      'Are you sure you want to continue connecting' : "yes"
      'password' : "vagrant"
      

#--------- Install software -----  

- name: Install cluster-software-pack.
  yum: state=present name="{{ item }}"
  with_items:
    - pacemaker 
    - pcs 
    - corosync
    - psmisc 
    - policycoreutils-python
    
  
- name: Set hacluster password
  user: name=hacluster password={{ hacluster_pw }}
  
- name: Start pcsd service
  service: name=pcsd enabled=yes state=started
  
- name: Auth Clusters {{ server_active }} {{ server_passive }}
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  shell: pcs cluster auth {{ server_active }} {{ server_passive }} -u {{ pcs_user }} -p {{ hacluster_pw_plain }}
  
- name: Creat Cluster and add ndes
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  shell: pcs cluster setup --name {{ cluster_name }} {{ server_active }} {{ server_passive }}
  ignore_errors: yes

- name: Start pcsd service
  service: name=httpd enabled=no state=stopped  
  
- name: Start Cluster
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  shell: pcs cluster start --all

- name: Disabled Stonith
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  shell: pcs property set stonith-enabled=false
  
- name: Ignore low quorum.
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  shell: pcs property set no-quorum-policy=ignore
  
- name: Create virtual IP
  when: '"{{ ansible_hostname }}" == "{{ server_active }}"'
  shell: pcs resource create ClusterIP ocf:heartbeat:IPaddr2 ip={{ cluster_virtual_ip }} cidr_netmask=32 op monitor interval=30s
  ignore_errors: yes
  
#--------- Configuration -----------

- shell: pcs resource defaults resource-stickiness=100

- name: Fixed pcs permission
  shell: chmod 777 /var/lib/pacemaker/cores

- shell: setsebool daemons_enable_cluster_mode=1

#--------- Fixed ----------
#Configuration file /usr/lib/systemd/system/xxxxxx is marked executable. Please remove executable permission bits. Proceeding anyway.


 